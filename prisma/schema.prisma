// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// bo demer si documentation prisma bi di nga guiss instruction yi
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model electeur {
  id        String   @id @map("_id") @default(cuid())
  cni       String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vote      vote[]
}

model administrateur {
  id        String   @id @map("_id") @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model election {
  id          String     @id @map("_id") @default(cuid())
  titre       String     @unique
  description String
  dateDebut   DateTime
  dateFin     DateTime
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  candidats   candidat[]
  vote        vote[]
}

model candidat {
  id         String   @id @map("_id") @default(cuid())
  nom        String
  prenom     String
  cni        String
  // dateNaissance DateTime
  // lieuNaissance String
  // profession    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  electionId String
  photoUrl   String

  election election @relation(fields: [electionId], references: [id])
  vote     vote[]
}

model vote {
  id         String   @id   @map("_id")  @default(cuid())
  electeurId String
  candidatId String
  electionId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  electeur electeur @relation(fields: [electeurId], references: [id])
  candidat candidat @relation(fields: [candidatId], references: [id])
  election election @relation(fields: [electionId], references: [id])
}
